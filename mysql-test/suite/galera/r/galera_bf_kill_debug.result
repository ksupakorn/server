#
# Test case 1
#
connection node_2;
CREATE TABLE t1(a int not null primary key auto_increment,b int) engine=InnoDB;
connect node_2a, 127.0.0.1, root, , test, $NODE_MYPORT_2;
connection node_2a;
insert into t1 values (1,0);
begin;
update t1 set b=2 where a=1;
connection node_2;
set session wsrep_sync_wait=0;
SET DEBUG_SYNC= 'wsrep_kill_one_thread_before_awake SIGNAL awake_reached WAIT_FOR continue_kill';
connect node_2b, 127.0.0.1, root, , test, $NODE_MYPORT_2;
connection node_2b;
SET DEBUG_SYNC='now WAIT_FOR awake_reached';
connection node_1;
select * from t1;
a	b
1	0
update t1 set b= 5 where a=1;;
connection node_2b;
# release KILL operator
SET GLOBAL debug_dbug = "";
SET DEBUG_SYNC = "now SIGNAL continue_kill";
connection node_2;
COMMIT;
connection node_2a;
COMMIT;
ERROR HY000: Lost connection to MySQL server during query
connection node_1;
SELECT * FROM t1;
a	b
1	5
DROP TABLE t1;
connection node_2b;
SET DEBUG_SYNC = "RESET";
disconnect node_2a;
disconnect node_2b;
#
# Test case 2
#
connection node_2;
CREATE TABLE t1(a int not null primary key auto_increment,b int) engine=InnoDB;
connect node_2a, 127.0.0.1, root, , test, $NODE_MYPORT_2;
connection node_2a;
insert into t1 values (1,0);
begin;
update t1 set b=2 where a=1;
connection node_2;
set session wsrep_sync_wait=0;
SET DEBUG_SYNC= 'wsrep_kill_one_thread_before_kill_query SIGNAL kill_query_reached WAIT_FOR continue_kill';
connect node_2b, 127.0.0.1, root, , test, $NODE_MYPORT_2;
connection node_2b;
SET DEBUG_SYNC='now WAIT_FOR kill_query_reached';
connection node_1;
select * from t1;
a	b
1	0
update t1 set b= 5 where a=1;;
connection node_2b;
# release KILL operator
SET GLOBAL debug_dbug = "";
SET DEBUG_SYNC = "now SIGNAL continue_kill";
connection node_2;
connection node_2a;
COMMIT;
Got one of the listed errors
connection node_1;
SELECT * FROM t1;
a	b
1	5
DROP TABLE t1;
connection node_2b;
SET DEBUG_SYNC = "RESET";
disconnect node_2a;
disconnect node_2b;
#
# Test case 3
#
connection node_2;
CREATE TABLE t1(a int not null primary key auto_increment,b int) engine=InnoDB;
connect node_2a, 127.0.0.1, root, , test, $NODE_MYPORT_2;
connection node_2a;
insert into t1 values (1,0);
begin;
update t1 set b=2 where a=1;
connection node_2;
set session wsrep_sync_wait=0;
SET DEBUG_SYNC= 'wsrep_kill_one_thread_before_awake SIGNAL awake_reached WAIT_FOR continue_kill';
connect node_2b, 127.0.0.1, root, , test, $NODE_MYPORT_2;
connection node_2b;
SET DEBUG_SYNC='now WAIT_FOR awake_reached';
connection node_1;
select * from t1;
a	b
1	0
update t1 set b= 5 where a=1;
connection node_2b;
# release KILL operator
SET GLOBAL debug_dbug = "";
SET DEBUG_SYNC = "now SIGNAL continue_kill";
connection node_2;
connection node_2a;
COMMIT;
ERROR HY000: Lost connection to MySQL server during query
connection node_1;
SELECT * FROM t1;
a	b
1	5
DROP TABLE t1;
connection node_2b;
SET DEBUG_SYNC = "RESET";
disconnect node_2a;
disconnect node_2b;
#
# Test case 4
#
connection node_2;
CREATE TABLE t1(a int not null primary key auto_increment,b int) engine=InnoDB;
connect node_2a, 127.0.0.1, root, , test, $NODE_MYPORT_2;
connection node_2a;
insert into t1 values (1,0);
begin;
update t1 set b=2 where a=1;
connection node_2;
set session wsrep_sync_wait=0;
SET DEBUG_SYNC= 'wsrep_kill_one_thread_before_kill_query SIGNAL kill_query_reached WAIT_FOR continue_kill';
connect node_2b, 127.0.0.1, root, , test, $NODE_MYPORT_2;
connection node_2b;
SET DEBUG_SYNC='now WAIT_FOR kill_query_reached';
SET GLOBAL debug_dbug = "d,sync.wsrep_innobase_kill_one_trx_before_awake";
connection node_1;
select * from t1;
a	b
1	0
update t1 set b= 5 where a=1;
connection node_2b;
SET SESSION DEBUG_SYNC = "now WAIT_FOR sync.wsrep_innobase_kill_one_trx_before_awake";
SET GLOBAL debug_dbug = "";
# release bf kill
set DEBUG_SYNC = "now SIGNAL signal.wsrep_innobase_kill_one_trx_before_awake";
connection node_2a;
COMMIT;
ERROR 40001: Deadlock: wsrep aborted transaction
SELECT * FROM t1;
a	b
1	5
# release KILL operator
SET DEBUG_SYNC = "now SIGNAL continue_kill";
connection node_2;
COMMIT;
SELECT * FROM t1;
a	b
1	5
connection node_1;
COMMIT;
SELECT * from t1;
a	b
1	5
DROP TABLE t1;
connection node_2b;
SET DEBUG_SYNC = "RESET";
disconnect node_2a;
disconnect node_2b;
#
# Test case 5
#
connection node_2;
CREATE TABLE t1(a int not null primary key auto_increment,b int) engine=InnoDB;
connect node_2a, 127.0.0.1, root, , test, $NODE_MYPORT_2;
connection node_2a;
insert into t1 values (1,0);
begin;
update t1 set b=2 where a=1;
connection node_2;
set session wsrep_sync_wait=0;
connect node_2b, 127.0.0.1, root, , test, $NODE_MYPORT_2;
connection node_2b;
SET GLOBAL debug_dbug = "d,sync.wsrep_innobase_kill_one_trx_before_LOCK_thd_data";
connection node_1;
select * from t1;
a	b
1	0
update t1 set b= 5 where a=1;
connection node_2b;
SET SESSION DEBUG_SYNC = "now WAIT_FOR sync.wsrep_innobase_kill_one_trx_before_LOCK_thd_data";
connection node_2;
SET DEBUG_SYNC= 'wsrep_kill_one_thread_started SIGNAL awake_reached WAIT_FOR continue_kill';
connection node_2b;
SET DEBUG_SYNC='now WAIT_FOR awake_reached';
SET GLOBAL debug_dbug = "";
connection node_2b;
# release KILL operator
SET DEBUG_SYNC = "now SIGNAL continue_kill";
# Release applier
SET DEBUG_SYNC = "now SIGNAL signal.wsrep_innobase_kill_one_trx_before_LOCK_thd_data";
connection node_2a;
COMMIT;
ERROR 40001: Deadlock: wsrep aborted transaction
connection node_2;
connection node_1;
SELECT * FROM t1;
a	b
1	5
DROP TABLE t1;
connection node_2b;
SET DEBUG_SYNC = "RESET";
disconnect node_2a;
disconnect node_2b;
