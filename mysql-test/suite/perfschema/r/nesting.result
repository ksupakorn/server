connect  con1, localhost, user1, , ;
select "MARKER_BEGIN" as marker;
marker
MARKER_BEGIN
select "This is simple statement one" as payload;
payload
This is simple statement one
select "This is simple statement two" as payload;
payload
This is simple statement two
select "This is the first part of a multi query" as payload;
select "And this is the second part of a multi query" as payload;
select "With a third part to make things complete" as payload;
$$
payload
This is the first part of a multi query
payload
And this is the second part of a multi query
payload
With a third part to make things complete
select "MARKER_END" as marker;
marker
MARKER_END
select "Con1 is done with payload" as status;
status
Con1 is done with payload
connection default;
set @con1_tid = (select thread_id from performance_schema.threads
where processlist_user = 'user1');
select (@con1_tid is not null) as expected;
expected
1
set @marker_begin = (select event_id from performance_schema.events_statements_history_long
where sql_text like "%MARKER_BEGIN%" and thread_id = @con1_tid);
select (@marker_begin is not null) as expected;
expected
1
set @marker_end = (select end_event_id from performance_schema.events_statements_history_long
where sql_text like "%MARKER_END%" and thread_id = @con1_tid);
select (@marker_end is not null) as expected;
expected
1
show status like "performance_schema%";
Variable_name	Value
Performance_schema_accounts_lost	0
Performance_schema_cond_classes_lost	0
Performance_schema_cond_instances_lost	0
Performance_schema_digest_lost	0
Performance_schema_file_classes_lost	0
Performance_schema_file_handles_lost	0
Performance_schema_file_instances_lost	0
Performance_schema_hosts_lost	0
Performance_schema_locker_lost	0
Performance_schema_mutex_classes_lost	0
Performance_schema_mutex_instances_lost	0
Performance_schema_rwlock_classes_lost	0
Performance_schema_rwlock_instances_lost	0
Performance_schema_session_connect_attrs_lost	0
Performance_schema_socket_classes_lost	0
Performance_schema_socket_instances_lost	0
Performance_schema_stage_classes_lost	0
Performance_schema_statement_classes_lost	0
Performance_schema_table_handles_lost	0
Performance_schema_table_instances_lost	0
Performance_schema_thread_classes_lost	0
Performance_schema_thread_instances_lost	0
Performance_schema_users_lost	0
select * from (
(
select (event_id - @marker_begin) as relative_event_id,
(end_event_id - @marker_begin) as relative_end_event_id,
event_name,
sql_text as comment,
nesting_event_type,
(nesting_event_id - @marker_begin) as relative_nesting_event_id
from performance_schema.events_statements_history_long
where (thread_id = @con1_tid)
and (@marker_begin <= event_id)
and (end_event_id <= @marker_end)
)
union
(
select (event_id - @marker_begin) as relative_event_id,
(end_event_id - @marker_begin) as relative_end_event_id,
event_name,
"(stage)" as comment,
nesting_event_type,
(nesting_event_id - @marker_begin) as relative_nesting_event_id
from performance_schema.events_stages_history_long
where (thread_id = @con1_tid)
and (@marker_begin <= event_id)
and (end_event_id <= @marker_end)
)
union
(
select (event_id - @marker_begin) as relative_event_id,
(end_event_id - @marker_begin) as relative_end_event_id,
event_name,
operation as comment,
nesting_event_type,
(nesting_event_id - @marker_begin) as relative_nesting_event_id
from performance_schema.events_waits_history_long
where (thread_id = @con1_tid)
and (@marker_begin <= event_id)
and (end_event_id <= @marker_end)
)
) all_events
order by relative_event_id asc;
relative_event_id	relative_end_event_id	event_name	comment	nesting_event_type	relative_nesting_event_id
0	19	statement/sql/select	select "MARKER_BEGIN" as marker	NULL	NULL
1	5	stage/sql/init	(stage)	STATEMENT	0
2	2	wait/io/socket/sql/client_connection	recv	STAGE	1
3	3	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	1
4	4	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	1
5	5	wait/io/file/sql/query_log	write	STAGE	1
6	6	stage/sql/checking permissions	(stage)	STATEMENT	0
7	7	stage/sql/Opening tables	(stage)	STATEMENT	0
8	8	stage/sql/After opening tables	(stage)	STATEMENT	0
9	9	stage/sql/init	(stage)	STATEMENT	0
10	10	stage/sql/optimizing	(stage)	STATEMENT	0
11	11	stage/sql/executing	(stage)	STATEMENT	0
12	12	stage/sql/end	(stage)	STATEMENT	0
13	13	stage/sql/query end	(stage)	STATEMENT	0
14	14	stage/sql/closing tables	(stage)	STATEMENT	0
15	15	stage/sql/freeing items	(stage)	STATEMENT	0
16	16	wait/io/socket/sql/client_connection	send	STATEMENT	0
17	17	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STATEMENT	0
18	19	stage/sql/cleaning up	(stage)	STATEMENT	0
19	19	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	18
20	20	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STATEMENT	0
21	21	idle	idle	NULL	NULL
22	41	statement/sql/select	select "This is simple statement one" as payload	NULL	NULL
23	27	stage/sql/init	(stage)	STATEMENT	22
24	24	wait/io/socket/sql/client_connection	recv	STAGE	23
25	25	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	23
26	26	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	23
27	27	wait/io/file/sql/query_log	write	STAGE	23
28	28	stage/sql/checking permissions	(stage)	STATEMENT	22
29	29	stage/sql/Opening tables	(stage)	STATEMENT	22
30	30	stage/sql/After opening tables	(stage)	STATEMENT	22
31	31	stage/sql/init	(stage)	STATEMENT	22
32	32	stage/sql/optimizing	(stage)	STATEMENT	22
33	33	stage/sql/executing	(stage)	STATEMENT	22
34	34	stage/sql/end	(stage)	STATEMENT	22
35	35	stage/sql/query end	(stage)	STATEMENT	22
36	36	stage/sql/closing tables	(stage)	STATEMENT	22
37	37	stage/sql/freeing items	(stage)	STATEMENT	22
38	38	wait/io/socket/sql/client_connection	send	STATEMENT	22
39	39	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STATEMENT	22
40	41	stage/sql/cleaning up	(stage)	STATEMENT	22
41	41	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	40
42	42	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STATEMENT	22
43	43	idle	idle	NULL	NULL
44	63	statement/sql/select	select "This is simple statement two" as payload	NULL	NULL
45	49	stage/sql/init	(stage)	STATEMENT	44
46	46	wait/io/socket/sql/client_connection	recv	STAGE	45
47	47	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	45
48	48	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	45
49	49	wait/io/file/sql/query_log	write	STAGE	45
50	50	stage/sql/checking permissions	(stage)	STATEMENT	44
51	51	stage/sql/Opening tables	(stage)	STATEMENT	44
52	52	stage/sql/After opening tables	(stage)	STATEMENT	44
53	53	stage/sql/init	(stage)	STATEMENT	44
54	54	stage/sql/optimizing	(stage)	STATEMENT	44
55	55	stage/sql/executing	(stage)	STATEMENT	44
56	56	stage/sql/end	(stage)	STATEMENT	44
57	57	stage/sql/query end	(stage)	STATEMENT	44
58	58	stage/sql/closing tables	(stage)	STATEMENT	44
59	59	stage/sql/freeing items	(stage)	STATEMENT	44
60	60	wait/io/socket/sql/client_connection	send	STATEMENT	44
61	61	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STATEMENT	44
62	63	stage/sql/cleaning up	(stage)	STATEMENT	44
63	63	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	62
64	64	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STATEMENT	44
65	65	idle	idle	NULL	NULL
66	84	statement/sql/select	select "This is the first part of a multi query" as payload;
select "And this is the second part of a multi query" as payload;
select "With a third part to make things complete" as payload	NULL	NULL
67	72	stage/sql/init	(stage)	STATEMENT	66
68	68	wait/io/socket/sql/client_connection	recv	STAGE	67
69	69	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	67
70	70	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	67
71	71	wait/io/file/sql/query_log	write	STAGE	67
72	72	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	67
73	73	stage/sql/checking permissions	(stage)	STATEMENT	66
74	74	stage/sql/Opening tables	(stage)	STATEMENT	66
75	75	stage/sql/After opening tables	(stage)	STATEMENT	66
76	76	stage/sql/init	(stage)	STATEMENT	66
77	77	stage/sql/optimizing	(stage)	STATEMENT	66
78	78	stage/sql/executing	(stage)	STATEMENT	66
79	79	stage/sql/end	(stage)	STATEMENT	66
80	80	stage/sql/query end	(stage)	STATEMENT	66
81	81	stage/sql/closing tables	(stage)	STATEMENT	66
82	84	stage/sql/freeing items	(stage)	STATEMENT	66
83	83	wait/io/socket/sql/client_connection	send	STAGE	82
84	84	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	82
85	100	statement/sql/select	select "And this is the second part of a multi query" as payload;
select "With a third part to make things complete" as payload	NULL	NULL
86	88	stage/sql/init	(stage)	STATEMENT	85
87	87	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	86
88	88	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	86
89	89	stage/sql/checking permissions	(stage)	STATEMENT	85
90	90	stage/sql/Opening tables	(stage)	STATEMENT	85
91	91	stage/sql/After opening tables	(stage)	STATEMENT	85
92	92	stage/sql/init	(stage)	STATEMENT	85
93	93	stage/sql/optimizing	(stage)	STATEMENT	85
94	94	stage/sql/executing	(stage)	STATEMENT	85
95	95	stage/sql/end	(stage)	STATEMENT	85
96	96	stage/sql/query end	(stage)	STATEMENT	85
97	97	stage/sql/closing tables	(stage)	STATEMENT	85
98	100	stage/sql/freeing items	(stage)	STATEMENT	85
99	99	wait/io/socket/sql/client_connection	send	STAGE	98
100	100	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	98
101	117	statement/sql/select	select "With a third part to make things complete" as payload	NULL	NULL
102	103	stage/sql/init	(stage)	STATEMENT	101
103	103	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	102
104	104	stage/sql/checking permissions	(stage)	STATEMENT	101
105	105	stage/sql/Opening tables	(stage)	STATEMENT	101
106	106	stage/sql/After opening tables	(stage)	STATEMENT	101
107	107	stage/sql/init	(stage)	STATEMENT	101
108	108	stage/sql/optimizing	(stage)	STATEMENT	101
109	109	stage/sql/executing	(stage)	STATEMENT	101
110	110	stage/sql/end	(stage)	STATEMENT	101
111	111	stage/sql/query end	(stage)	STATEMENT	101
112	112	stage/sql/closing tables	(stage)	STATEMENT	101
113	113	stage/sql/freeing items	(stage)	STATEMENT	101
114	114	wait/io/socket/sql/client_connection	send	STATEMENT	101
115	115	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STATEMENT	101
116	117	stage/sql/cleaning up	(stage)	STATEMENT	101
117	117	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	116
118	118	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STATEMENT	101
119	119	idle	idle	NULL	NULL
120	139	statement/sql/select	select "MARKER_END" as marker	NULL	NULL
121	125	stage/sql/init	(stage)	STATEMENT	120
122	122	wait/io/socket/sql/client_connection	recv	STAGE	121
123	123	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	121
124	124	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	121
125	125	wait/io/file/sql/query_log	write	STAGE	121
126	126	stage/sql/checking permissions	(stage)	STATEMENT	120
127	127	stage/sql/Opening tables	(stage)	STATEMENT	120
128	128	stage/sql/After opening tables	(stage)	STATEMENT	120
129	129	stage/sql/init	(stage)	STATEMENT	120
130	130	stage/sql/optimizing	(stage)	STATEMENT	120
131	131	stage/sql/executing	(stage)	STATEMENT	120
132	132	stage/sql/end	(stage)	STATEMENT	120
133	133	stage/sql/query end	(stage)	STATEMENT	120
134	134	stage/sql/closing tables	(stage)	STATEMENT	120
135	135	stage/sql/freeing items	(stage)	STATEMENT	120
136	136	wait/io/socket/sql/client_connection	send	STATEMENT	120
137	137	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STATEMENT	120
138	139	stage/sql/cleaning up	(stage)	STATEMENT	120
139	139	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	138
disconnect con1;
